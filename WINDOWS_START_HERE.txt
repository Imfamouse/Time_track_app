╔══════════════════════════════════════════════════════════════════════════╗
║                         НАЧНИТЕ ОТСЮДА! 👋                               ║
║              Инструкция для запуска на Windows                           ║
╚══════════════════════════════════════════════════════════════════════════╝


🎯 ТРИ ПРОСТЫХ ШАГА:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

ШАГ 1: Получите код на свой компьютер
────────────────────────────────────────────────────────────────────────

Вариант А: Если у вас есть Git
  1. Откройте PowerShell или Command Prompt
  2. Перейдите в папку, куда хотите скачать проект
  3. Выполните:
     git clone <URL-репозитория>
     cd time-track-app

Вариант Б: Скачать ZIP архив
  1. Скачайте проект как ZIP
  2. Распакуйте в удобную папку (например, C:\Projects\time-track-app)
  3. Откройте эту папку в Проводнике


ШАГ 2: Проверьте требования
────────────────────────────────────────────────────────────────────────

В папке проекта найдите и запустите (двойной клик):
  
  ✅ check-requirements.bat

Скрипт проверит что установлено и что нужно доустановить.


ШАГ 3: Запустите приложение
────────────────────────────────────────────────────────────────────────

📦 ВАРИАНТ 1: С Docker (РЕКОМЕНДУЕТСЯ - проще!)
   
   Если Docker установлен, просто запустите:
   
   ▶️  WINDOWS_QUICKSTART.bat  (двойной клик)
   
   Готово! Откройте: http://localhost:5173


🔧 ВАРИАНТ 2: Без Docker
   
   Если Docker нет, запустите оба скрипта:
   
   ▶️  start-backend.bat   (первое окно терминала)
   ▶️  start-frontend.bat  (второе окно терминала)
   
   Готово! Откройте: http://localhost:5173


🌐 РЕЗУЛЬТАТ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

После запуска откройте в браузере:

  🎨 Приложение:  http://localhost:5173
  📖 API Docs:    http://localhost:8000/docs

Вы увидите:
  ✅ Дашборд со статистикой
  ✅ Форму создания записей времени
  ✅ Таблицу с историей записей
  ✅ 5 проектов с цветами


📚 НУЖНА ПОМОЩЬ?
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📖 WINDOWS_SETUP.md
   Подробная инструкция:
   • Как установить Docker/Python/Node.js
   • Как запустить разными способами
   • Решение проблем

📋 WINDOWS_CHEATSHEET.txt
   Краткая шпаргалка с командами


🚨 ЧАСТЫЕ ПРОБЛЕМЫ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

❌ "Docker не найден"
   → Установите Docker Desktop:
     https://www.docker.com/products/docker-desktop/

❌ "Python не найден"
   → Установите Python 3.12+:
     https://www.python.org/downloads/
     ⚠️  При установке отметьте "Add Python to PATH"!

❌ "Порт занят"
   → Закройте другие приложения на портах 8000 и 5173
   → Или читайте WINDOWS_SETUP.md → "Решение проблем"

❌ "Пустая страница в браузере"
   → Проверьте что Backend работает: http://localhost:8000/health
   → Проверьте файл frontend/.env


💡 СОВЕТ ДЛЯ НОВИЧКОВ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Если вы не знакомы с разработкой:
  
  1️⃣  Используйте вариант с Docker (самый простой)
  2️⃣  Установите Docker Desktop (5 минут)
  3️⃣  Запустите WINDOWS_QUICKSTART.bat
  4️⃣  Откройте http://localhost:5173
  
  Все работает! 🎉


📦 ЧТО УСТАНАВЛИВАТЬ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Для Docker варианта (рекомендуется):
  ✅ Docker Desktop - https://www.docker.com/products/docker-desktop/
  
Для варианта без Docker:
  ✅ Python 3.12+ - https://www.python.org/downloads/
  ✅ Node.js 20+  - https://nodejs.org/
  ✅ pnpm - установится через npm install -g pnpm


🎉 ГОТОВО!
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Следуйте этим шагам и через 10 минут у вас будет работающее приложение!

Удачи! 🚀
